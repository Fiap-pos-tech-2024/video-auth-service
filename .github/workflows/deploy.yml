name: Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  test-and-sonarcloud:
    name: Test and Analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run tests and collect coverage
        run: |
          npm test -- --coverage
          ls -la coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-deploy:
    name: Build and Push Docker Image to ECR and Redeploy ECS
    runs-on: ubuntu-latest
    needs: test-and-sonarcloud  # s√≥ roda se testes passarem

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::816069165502:role/gh-actions-video-auth-service-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR (no cache)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: video-auth-service
          IMAGE_TAG: latest
        run: |
          echo "üîÅ For√ßando build sem cache..."
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region us-east-1 || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region us-east-1

          docker image rm $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG || true
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Force new ECS deployment
        run: |
          aws ecs update-service \
            --cluster microservices-cluster \
            --service video-auth-service \
            --force-new-deployment \
            --region us-east-1

      - name: Get ALB DNS
        id: get-alb-dns
        run: |
          ALB_DNS=$(aws elbv2 describe-load-balancers \
            --names ms-shared-alb \
            --region us-east-1 \
            --query "LoadBalancers[0].DNSName" \
            --output text)
          echo "alb_dns=$ALB_DNS" >> $GITHUB_OUTPUT

      - name: Print Swagger URL
        run: |
          echo "Swagger dispon√≠vel em: http://${{ steps.get-alb-dns.outputs.alb_dns }}/auth-docs"

      - name: Print Grafana URL
        run: |
          echo "Grafana dispon√≠vel em: http://${{ steps.get-alb-dns.outputs.alb_dns }}/grafana"